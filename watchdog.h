<<<<<<< HEAD
/*******************************************************************************
*
* 1. NAME
*       watchdog.h
*
* 2. DESCRIPTION
*
*
*******************************************************************************/
#ifndef WATCHDOG_H_
#define WATCHDOG_H_

/*******************************************************************************
*   HEADER FILES                                                               *
*******************************************************************************/
#include <avr/wdt.h>
#include <avr/interrupt.h>
#include <stdint.h>

/*******************************************************************************
*   GLOBAL VARIABLES                                                           *
*******************************************************************************/
#define SYS_RESET_PIN PINB4


/*******************************************************************************
*   MACROS                                                                     *
*****************************************************************************///
#define soft_reset() /* resets the system */    \
    do {                                        \
        wdt_enable(WDTO_15MS);                  \
        while(1) {                              \
            ; /* wait until timer runs out */   \
        }                                       \
    } while(0)

/*******************************************************************************
*   FUNCTION PROTOTYPES                                                        *
*****************************************************************************///


/***************************************************************************//**
@brief Initializes the watchdog timer and system reset interrupt.
@details Interrupts are disabled during timed sequence.
@param void
@return void
*******************************************************************************/
void wdt_init(void)__attribute__((naked))__attribute__((section(".init3")));


#endif /* WATCHDOG_H_ */
=======
/*******************************************************************************
*
* 1. NAME
*       watchdog.h
*
* 2. DESCRIPTION
*
*
*******************************************************************************/
#ifndef WATCHDOG_H_
#define WATCHDOG_H_

/*******************************************************************************
*   HEADER FILES                                                               *
*******************************************************************************/
#include <avr/wdt.h>
#include <avr/interrupt.h>
#include <stdint.h>

/*******************************************************************************
*   GLOBAL VARIABLES                                                           *
*******************************************************************************/
#define SYS_RESET_PIN PINB4


/*******************************************************************************
*   MACROS                                                                     *
*****************************************************************************///
#define soft_reset() /* resets the system */    \
    do {                                        \
        wdt_enable(WDTO_15MS);                  \
        while(1) {                              \
            ; /* wait until timer runs out */   \
        }                                       \
    } while(0)

/*******************************************************************************
*   FUNCTION PROTOTYPES                                                        *
*****************************************************************************///


/***************************************************************************//**
@brief Initializes the watchdog timer and system reset interrupt.
@details Interrupts are disabled during timed sequence.
@param void
@return void
*******************************************************************************/
void wdt_init(void)__attribute__((naked))__attribute__((section(".init3")));


#endif /* WATCHDOG_H_ */
>>>>>>> Cleaned up everything
